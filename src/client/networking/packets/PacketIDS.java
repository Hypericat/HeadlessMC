package client.networking.packets;

import client.networking.Boundness;
import client.networking.NetworkState;

import java.util.HashMap;
import java.util.List;

public class PacketIDS {
    private static final HashMap<Boundness, HashMap<NetworkState, HashMap<Integer, PacketID>>> packetIDs = new HashMap<>();
    public static PacketID COOKIE_REQUEST_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x00, "cookie_request"));
    public static PacketID CUSTOM_PAYLOAD_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x01, "custom_payload"));
    public static PacketID CUSTOM_REPORT_DETAILS_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x0F, "custom_report_details"));
    public static PacketID DISCONNECT_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x02, "disconnect"));
    public static PacketID FINISH_CONFIGURATION_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x03, "finish_configuration"));
    public static PacketID KEEP_ALIVE_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x04, "keep_alive"));
    public static PacketID PING_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x05, "ping"));
    public static PacketID REGISTRY_DATA_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x07, "registry_data"));
    public static PacketID RESET_CHAT_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x06, "reset_chat"));
    public static PacketID RESOURCE_PACK_POP_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x08, "resource_pack_pop"));
    public static PacketID RESOURCE_PACK_PUSH_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x09, "resource_pack_push"));
    public static PacketID SELECT_KNOWN_PACKS_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x0E, "select_known_packs"));
    public static PacketID SERVER_LINKS_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x10, "server_links"));
    public static PacketID STORE_COOKIE_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x0A, "store_cookie"));
    public static PacketID TRANSFER_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x0B, "transfer"));
    public static PacketID UPDATE_ENABLED_FEATURES_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x0C, "update_enabled_features"));
    public static PacketID UPDATE_TAGS_CONFIGURATION_S2C = register(new PacketID(Boundness.S2C, NetworkState.CONFIGURATION, 0x0D, "update_tags"));
    public static PacketID CLIENT_INFORMATION_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x00, "client_information"));
    public static PacketID COOKIE_RESPONSE_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x01, "cookie_response"));
    public static PacketID CUSTOM_PAYLOAD_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x02, "custom_payload"));
    public static PacketID FINISH_CONFIGURATION_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x03, "finish_configuration"));
    public static PacketID KEEP_ALIVE_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x04, "keep_alive"));
    public static PacketID PONG_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x05, "pong"));
    public static PacketID RESOURCE_PACK_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x06, "resource_pack"));
    public static PacketID SELECT_KNOWN_PACKS_CONFIGURATION_C2S = register(new PacketID(Boundness.C2S, NetworkState.CONFIGURATION, 0x07, "select_known_packs"));
    public static PacketID INTENTION_HANDSHAKE_C2S = register(new PacketID(Boundness.C2S, NetworkState.HANDSHAKE, 0x00, "intention"));
    public static PacketID COOKIE_REQUEST_LOGIN_S2C = register(new PacketID(Boundness.S2C, NetworkState.LOGIN, 0x05, "cookie_request"));
    public static PacketID CUSTOM_QUERY_LOGIN_S2C = register(new PacketID(Boundness.S2C, NetworkState.LOGIN, 0x04, "custom_query"));
    public static PacketID GAME_PROFILE_LOGIN_S2C = register(new PacketID(Boundness.S2C, NetworkState.LOGIN, 0x02, "game_profile"));
    public static PacketID HELLO_LOGIN_S2C = register(new PacketID(Boundness.S2C, NetworkState.LOGIN, 0x01, "hello"));
    public static PacketID LOGIN_COMPRESSION_LOGIN_S2C = register(new PacketID(Boundness.S2C, NetworkState.LOGIN, 0x03, "login_compression"));
    public static PacketID LOGIN_DISCONNECT_LOGIN_S2C = register(new PacketID(Boundness.S2C, NetworkState.LOGIN, 0x00, "login_disconnect"));
    public static PacketID COOKIE_RESPONSE_LOGIN_C2S = register(new PacketID(Boundness.C2S, NetworkState.LOGIN, 0x04, "cookie_response"));
    public static PacketID CUSTOM_QUERY_ANSWER_LOGIN_C2S = register(new PacketID(Boundness.C2S, NetworkState.LOGIN, 0x02, "custom_query_answer"));
    public static PacketID HELLO_LOGIN_C2S = register(new PacketID(Boundness.C2S, NetworkState.LOGIN, 0x00, "hello"));
    public static PacketID KEY_LOGIN_C2S = register(new PacketID(Boundness.C2S, NetworkState.LOGIN, 0x01, "key"));
    public static PacketID LOGIN_ACKNOWLEDGED_LOGIN_C2S = register(new PacketID(Boundness.C2S, NetworkState.LOGIN, 0x03, "login_acknowledged"));
    public static PacketID ADD_ENTITY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x01, "add_entity"));
    public static PacketID ADD_EXPERIENCE_ORB_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x02, "add_experience_orb"));
    public static PacketID ANIMATE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x03, "animate"));
    public static PacketID AWARD_STATS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x04, "award_stats"));
    public static PacketID BLOCK_CHANGED_ACK_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x05, "block_changed_ack"));
    public static PacketID BLOCK_DESTRUCTION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x06, "block_destruction"));
    public static PacketID BLOCK_ENTITY_DATA_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x07, "block_entity_data"));
    public static PacketID BLOCK_EVENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x08, "block_event"));
    public static PacketID BLOCK_UPDATE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x09, "block_update"));
    public static PacketID BOSS_EVENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x0A, "boss_event"));
    public static PacketID BUNDLE_DELIMITER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x00, "bundle_delimiter"));
    public static PacketID CHANGE_DIFFICULTY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x0B, "change_difficulty"));
    public static PacketID CHUNK_BATCH_FINISHED_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x0C, "chunk_batch_finished"));
    public static PacketID CHUNK_BATCH_START_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x0D, "chunk_batch_start"));
    public static PacketID CHUNKS_BIOMES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x0E, "chunks_biomes"));
    public static PacketID CLEAR_TITLES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x0F, "clear_titles"));
    public static PacketID COMMAND_SUGGESTIONS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x10, "command_suggestions"));
    public static PacketID COMMANDS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x11, "commands"));
    public static PacketID CONTAINER_CLOSE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x12, "container_close"));
    public static PacketID CONTAINER_SET_CONTENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x13, "container_set_content"));
    public static PacketID CONTAINER_SET_DATA_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x14, "container_set_data"));
    public static PacketID CONTAINER_SET_SLOT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x15, "container_set_slot"));
    public static PacketID COOKIE_REQUEST_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x16, "cookie_request"));
    public static PacketID COOLDOWN_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x17, "cooldown"));
    public static PacketID CUSTOM_CHAT_COMPLETIONS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x18, "custom_chat_completions"));
    public static PacketID CUSTOM_PAYLOAD_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x19, "custom_payload"));
    public static PacketID CUSTOM_REPORT_DETAILS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x7A, "custom_report_details"));
    public static PacketID DAMAGE_EVENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x1A, "damage_event"));
    public static PacketID DEBUG_SAMPLE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x1B, "debug_sample"));
    public static PacketID DELETE_CHAT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x1C, "delete_chat"));
    public static PacketID DISCONNECT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x1D, "disconnect"));
    public static PacketID DISGUISED_CHAT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x1E, "disguised_chat"));
    public static PacketID ENTITY_EVENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x1F, "entity_event"));
    public static PacketID EXPLODE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x20, "explode"));
    public static PacketID FORGET_LEVEL_CHUNK_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x21, "forget_level_chunk"));
    public static PacketID GAME_EVENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x22, "game_event"));
    public static PacketID HORSE_SCREEN_OPEN_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x23, "horse_screen_open"));
    public static PacketID HURT_ANIMATION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x24, "hurt_animation"));
    public static PacketID INITIALIZE_BORDER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x25, "initialize_border"));
    public static PacketID KEEP_ALIVE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x26, "keep_alive"));
    public static PacketID LEVEL_CHUNK_WITH_LIGHT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x27, "level_chunk_with_light"));
    public static PacketID LEVEL_EVENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x28, "level_event"));
    public static PacketID LEVEL_PARTICLES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x29, "level_particles"));
    public static PacketID LIGHT_UPDATE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x2A, "light_update"));
    public static PacketID LOGIN_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x2B, "login"));
    public static PacketID MAP_ITEM_DATA_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x2C, "map_item_data"));
    public static PacketID MERCHANT_OFFERS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x2D, "merchant_offers"));
    public static PacketID MOVE_ENTITY_POS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x2E, "move_entity_pos"));
    public static PacketID MOVE_ENTITY_POS_ROT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x2F, "move_entity_pos_rot"));
    public static PacketID MOVE_ENTITY_ROT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x30, "move_entity_rot"));
    public static PacketID MOVE_VEHICLE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x31, "move_vehicle"));
    public static PacketID OPEN_BOOK_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x32, "open_book"));
    public static PacketID OPEN_SCREEN_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x33, "open_screen"));
    public static PacketID OPEN_SIGN_EDITOR_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x34, "open_sign_editor"));
    public static PacketID PING_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x35, "ping"));
    public static PacketID PLACE_GHOST_RECIPE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x37, "place_ghost_recipe"));
    public static PacketID PLAYER_ABILITIES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x38, "player_abilities"));
    public static PacketID PLAYER_CHAT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x39, "player_chat"));
    public static PacketID PLAYER_COMBAT_END_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x3A, "player_combat_end"));
    public static PacketID PLAYER_COMBAT_ENTER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x3B, "player_combat_enter"));
    public static PacketID PLAYER_COMBAT_KILL_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x3C, "player_combat_kill"));
    public static PacketID PLAYER_INFO_REMOVE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x3D, "player_info_remove"));
    public static PacketID PLAYER_INFO_UPDATE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x3E, "player_info_update"));
    public static PacketID PLAYER_LOOK_AT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x3F, "player_look_at"));
    public static PacketID PLAYER_POSITION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x40, "player_position"));
    public static PacketID PONG_RESPONSE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x36, "pong_response"));
    public static PacketID PROJECTILE_POWER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x79, "projectile_power"));
    public static PacketID RECIPE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x41, "recipe"));
    public static PacketID REMOVE_ENTITIES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x42, "remove_entities"));
    public static PacketID REMOVE_MOB_EFFECT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x43, "remove_mob_effect"));
    public static PacketID RESET_SCORE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x44, "reset_score"));
    public static PacketID RESOURCE_PACK_POP_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x45, "resource_pack_pop"));
    public static PacketID RESOURCE_PACK_PUSH_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x46, "resource_pack_push"));
    public static PacketID RESPAWN_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x47, "respawn"));
    public static PacketID ROTATE_HEAD_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x48, "rotate_head"));
    public static PacketID SECTION_BLOCKS_UPDATE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x49, "section_blocks_update"));
    public static PacketID SELECT_ADVANCEMENTS_TAB_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x4A, "select_advancements_tab"));
    public static PacketID SERVER_DATA_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x4B, "server_data"));
    public static PacketID SERVER_LINKS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x7B, "server_links"));
    public static PacketID SET_ACTION_BAR_TEXT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x4C, "set_action_bar_text"));
    public static PacketID SET_BORDER_CENTER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x4D, "set_border_center"));
    public static PacketID SET_BORDER_LERP_SIZE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x4E, "set_border_lerp_size"));
    public static PacketID SET_BORDER_SIZE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x4F, "set_border_size"));
    public static PacketID SET_BORDER_WARNING_DELAY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x50, "set_border_warning_delay"));
    public static PacketID SET_BORDER_WARNING_DISTANCE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x51, "set_border_warning_distance"));
    public static PacketID SET_CAMERA_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x52, "set_camera"));
    public static PacketID SET_CARRIED_ITEM_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x53, "set_carried_item"));
    public static PacketID SET_CHUNK_CACHE_CENTER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x54, "set_chunk_cache_center"));
    public static PacketID SET_CHUNK_CACHE_RADIUS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x55, "set_chunk_cache_radius"));
    public static PacketID SET_DEFAULT_SPAWN_POSITION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x56, "set_default_spawn_position"));
    public static PacketID SET_DISPLAY_OBJECTIVE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x57, "set_display_objective"));
    public static PacketID SET_ENTITY_DATA_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x58, "set_entity_data"));
    public static PacketID SET_ENTITY_LINK_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x59, "set_entity_link"));
    public static PacketID SET_ENTITY_MOTION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x5A, "set_entity_motion"));
    public static PacketID SET_EQUIPMENT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x5B, "set_equipment"));
    public static PacketID SET_EXPERIENCE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x5C, "set_experience"));
    public static PacketID SET_HEALTH_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x5D, "set_health"));
    public static PacketID SET_OBJECTIVE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x5E, "set_objective"));
    public static PacketID SET_PASSENGERS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x5F, "set_passengers"));
    public static PacketID SET_PLAYER_TEAM_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x60, "set_player_team"));
    public static PacketID SET_SCORE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x61, "set_score"));
    public static PacketID SET_SIMULATION_DISTANCE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x62, "set_simulation_distance"));
    public static PacketID SET_SUBTITLE_TEXT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x63, "set_subtitle_text"));
    public static PacketID SET_TIME_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x64, "set_time"));
    public static PacketID SET_TITLE_TEXT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x65, "set_title_text"));
    public static PacketID SET_TITLES_ANIMATION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x66, "set_titles_animation"));
    public static PacketID SOUND_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x68, "sound"));
    public static PacketID SOUND_ENTITY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x67, "sound_entity"));
    public static PacketID START_CONFIGURATION_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x69, "start_configuration"));
    public static PacketID STOP_SOUND_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x6A, "stop_sound"));
    public static PacketID STORE_COOKIE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x6B, "store_cookie"));
    public static PacketID SYSTEM_CHAT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x6C, "system_chat"));
    public static PacketID TAB_LIST_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x6D, "tab_list"));
    public static PacketID TAG_QUERY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x6E, "tag_query"));
    public static PacketID TAKE_ITEM_ENTITY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x6F, "take_item_entity"));
    public static PacketID TELEPORT_ENTITY_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x70, "teleport_entity"));
    public static PacketID TICKING_STATE_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x71, "ticking_state"));
    public static PacketID TICKING_STEP_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x72, "ticking_step"));
    public static PacketID TRANSFER_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x73, "transfer"));
    public static PacketID UPDATE_ADVANCEMENTS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x74, "update_advancements"));
    public static PacketID UPDATE_ATTRIBUTES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x75, "update_attributes"));
    public static PacketID UPDATE_MOB_EFFECT_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x76, "update_mob_effect"));
    public static PacketID UPDATE_RECIPES_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x77, "update_recipes"));
    public static PacketID UPDATE_TAGS_PLAY_S2C = register(new PacketID(Boundness.S2C, NetworkState.PLAY, 0x78, "update_tags"));
    public static PacketID ACCEPT_TELEPORTATION_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x00, "accept_teleportation"));
    public static PacketID BLOCK_ENTITY_TAG_QUERY_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x01, "block_entity_tag_query"));
    public static PacketID CHANGE_DIFFICULTY_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x02, "change_difficulty"));
    public static PacketID CHAT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x06, "chat"));
    public static PacketID CHAT_ACK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x03, "chat_ack"));
    public static PacketID CHAT_COMMAND_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x04, "chat_command"));
    public static PacketID CHAT_COMMAND_SIGNED_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x05, "chat_command_signed"));
    public static PacketID CHAT_SESSION_UPDATE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x07, "chat_session_update"));
    public static PacketID CHUNK_BATCH_RECEIVED_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x08, "chunk_batch_received"));
    public static PacketID CLIENT_COMMAND_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x09, "client_command"));
    public static PacketID CLIENT_INFORMATION_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x0A, "client_information"));
    public static PacketID COMMAND_SUGGESTION_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x0B, "command_suggestion"));
    public static PacketID CONFIGURATION_ACKNOWLEDGED_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x0C, "configuration_acknowledged"));
    public static PacketID CONTAINER_BUTTON_CLICK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x0D, "container_button_click"));
    public static PacketID CONTAINER_CLICK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x0E, "container_click"));
    public static PacketID CONTAINER_CLOSE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x0F, "container_close"));
    public static PacketID CONTAINER_SLOT_STATE_CHANGED_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x10, "container_slot_state_changed"));
    public static PacketID COOKIE_RESPONSE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x11, "cookie_response"));
    public static PacketID CUSTOM_PAYLOAD_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x12, "custom_payload"));
    public static PacketID DEBUG_SAMPLE_SUBSCRIPTION_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x13, "debug_sample_subscription"));
    public static PacketID EDIT_BOOK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x14, "edit_book"));
    public static PacketID ENTITY_TAG_QUERY_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x15, "entity_tag_query"));
    public static PacketID INTERACT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x16, "interact"));
    public static PacketID JIGSAW_GENERATE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x17, "jigsaw_generate"));
    public static PacketID KEEP_ALIVE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x18, "keep_alive"));
    public static PacketID LOCK_DIFFICULTY_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x19, "lock_difficulty"));
    public static PacketID MOVE_PLAYER_POS_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x1A, "move_player_pos"));
    public static PacketID MOVE_PLAYER_POS_ROT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x1B, "move_player_pos_rot"));
    public static PacketID MOVE_PLAYER_ROT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x1C, "move_player_rot"));
    public static PacketID MOVE_PLAYER_STATUS_ONLY_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x1D, "move_player_status_only"));
    public static PacketID MOVE_VEHICLE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x1E, "move_vehicle"));
    public static PacketID PADDLE_BOAT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x1F, "paddle_boat"));
    public static PacketID PICK_ITEM_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x20, "pick_item"));
    public static PacketID PING_REQUEST_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x21, "ping_request"));
    public static PacketID PLACE_RECIPE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x22, "place_recipe"));
    public static PacketID PLAYER_ABILITIES_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x23, "player_abilities"));
    public static PacketID PLAYER_ACTION_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x24, "player_action"));
    public static PacketID PLAYER_COMMAND_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x25, "player_command"));
    public static PacketID PLAYER_INPUT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x26, "player_input"));
    public static PacketID PONG_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x27, "pong"));
    public static PacketID RECIPE_BOOK_CHANGE_SETTINGS_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x28, "recipe_book_change_settings"));
    public static PacketID RECIPE_BOOK_SEEN_RECIPE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x29, "recipe_book_seen_recipe"));
    public static PacketID RENAME_ITEM_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x2A, "rename_item"));
    public static PacketID RESOURCE_PACK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x2B, "resource_pack"));
    public static PacketID SEEN_ADVANCEMENTS_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x2C, "seen_advancements"));
    public static PacketID SELECT_TRADE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x2D, "select_trade"));
    public static PacketID SET_BEACON_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x2E, "set_beacon"));
    public static PacketID SET_CARRIED_ITEM_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x2F, "set_carried_item"));
    public static PacketID SET_COMMAND_BLOCK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x30, "set_command_block"));
    public static PacketID SET_COMMAND_MINECART_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x31, "set_command_minecart"));
    public static PacketID SET_CREATIVE_MODE_SLOT_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x32, "set_creative_mode_slot"));
    public static PacketID SET_JIGSAW_BLOCK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x33, "set_jigsaw_block"));
    public static PacketID SET_STRUCTURE_BLOCK_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x34, "set_structure_block"));
    public static PacketID SIGN_UPDATE_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x35, "sign_update"));
    public static PacketID SWING_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x36, "swing"));
    public static PacketID TELEPORT_TO_ENTITY_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x37, "teleport_to_entity"));
    public static PacketID USE_ITEM_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x39, "use_item"));
    public static PacketID USE_ITEM_ON_PLAY_C2S = register(new PacketID(Boundness.C2S, NetworkState.PLAY, 0x38, "use_item_on"));
    public static PacketID PONG_RESPONSE_STATUS_S2C = register(new PacketID(Boundness.S2C, NetworkState.STATUS, 0x01, "pong_response"));
    public static PacketID STATUS_RESPONSE_STATUS_S2C = register(new PacketID(Boundness.S2C, NetworkState.STATUS, 0x00, "status_response"));
    public static PacketID PING_REQUEST_STATUS_C2S = register(new PacketID(Boundness.C2S, NetworkState.STATUS, 0x01, "ping_request"));
    public static PacketID STATUS_REQUEST_STATUS_C2S = register(new PacketID(Boundness.C2S, NetworkState.STATUS, 0x00, "status_request"));

    private static PacketID register(PacketID packetID) {
        if (!packetIDs.containsKey(packetID.getBoundness())) {
            packetIDs.put(packetID.getBoundness(), new HashMap<>());
        }
        HashMap<NetworkState, HashMap<Integer, PacketID>> map = packetIDs.get(packetID.getBoundness());
        if (!map.containsKey(packetID.getNetworkState())) {
            map.put(packetID.getNetworkState(), new HashMap<>());
        }
        map.get(packetID.getNetworkState()).put(packetID.getPacketID(), packetID);
        return packetID;
    }

    public static PacketID get(int packetID, NetworkState state, Boundness boundness) {
        return packetIDs.get(boundness).get(state).get(packetID);
    }

    public static List<PacketID> getFromState(Boundness boundness, NetworkState state) {
        return packetIDs.get(boundness).get(state).values().stream().toList();
    }
}
